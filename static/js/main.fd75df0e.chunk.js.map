{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/HW4.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","messageWrap","avatar","src","alt","message","messageName","name","messageText","messageTime","time","messageData","HW1","Affair","priorityColor","affair","priority","high","middle","low","affairName","affairBtnDelete","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","affairsWrap","affairs","buttons","setFilter","defaultAffairs","HW2","useState","setAffairs","filter","filteredAffairs","filterAffairs","el","deleteAffair","Greeting","onKeyDownHandler","setNameCallback","addUser","error","totalUsers","inputClass","input","inputWrap","value","onChange","onKeyDown","disabled","buttonAdd","errorText","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","currentTarget","trim","event","HW3","setUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","errorInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checkboxLabel","checked","HW4","text","setText","showAlert","setChecked","column","blue","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.fd75df0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairsWrap\":\"Affairs_affairsWrap__36q_6\",\"buttons\":\"Affairs_buttons__1ygQ0\",\"affairs\":\"Affairs_affairs__1IfyN\",\"affairBtnDelete\":\"Affairs_affairBtnDelete__2azXD\",\"high\":\"Affairs_high__3Dq8O\",\"middle\":\"Affairs_middle__3e5Hi\",\"low\":\"Affairs_low__3ZWUc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrap\":\"Message_messageWrap__3NCmu\",\"avatar\":\"Message_avatar__3owch\",\"message\":\"Message_message__2z4nj\",\"messageName\":\"Message_messageName__34EYq\",\"messageText\":\"Message_messageText__2Sr9g\",\"messageTime\":\"Message_messageTime__3464R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrap\":\"Greeting_inputWrap__3vdRr\",\"input\":\"Greeting_input__3rFKD\",\"error\":\"Greeting_error__1S9BV\",\"errorText\":\"Greeting_errorText__2-eMW\",\"buttonAdd\":\"Greeting_buttonAdd__1fBUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2ARgI\",\"errorInput\":\"SuperInputText_errorInput__QhuUL\",\"error\":\"SuperInputText_error__2HL5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3WTR7\",\"red\":\"SuperButton_red__2x0Dm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1whcB\",\"spanClassName\":\"SuperCheckbox_spanClassName__1Y3pc\",\"checkboxLabel\":\"SuperCheckbox_checkboxLabel__pBak2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1q6hG\",\"column\":\"HW4_column__AqssP\",\"testSpanError\":\"HW4_testSpanError__hzfHX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__tMl9Y\"};","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\ntype MessagePropsType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={s.messageWrap}>\r\n            <div className={s.avatar}>\r\n                <img src={props.avatar} alt=\"avatar\"/>\r\n            </div>\r\n            <div className={s.message}>\r\n                <h3 className={s.messageName}>{props.name}</h3>\r\n                <p className={s.messageText}>{props.message}</p>\r\n                <span className={s.messageTime}>{props.time}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <div>\r\n                <Message\r\n                    avatar={messageData.avatar}\r\n                    name={messageData.name}\r\n                    message={messageData.message}\r\n                    time={messageData.time}\r\n                />\r\n            </div>\r\n\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }\r\n\r\n    const priorityColor = props.affair.priority === 'high' ? s.high : props.affair.priority === 'middle' ? s.middle : props.affair.priority === 'low' ? s.low : ''\r\n\r\n    return (\r\n        <>\r\n            <span className={s.affairName}>{props.affair.name}</span>\r\n            <span className={priorityColor}>\r\n                [{props.affair.priority}]\r\n            </span>\r\n            <button className={s.affairBtnDelete} onClick={deleteCallback}>X</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = {\r\n    data: AffairType[]\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            key={a._id}\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter('low')\r\n    }\r\n\r\n    return (\r\n        <div className={s.affairsWrap}>\r\n            <div className={s.affairs}>\r\n                {mappedAffairs}\r\n            </div>\r\n            <div className={s.buttons}>\r\n                <button onClick={setAll}>All</button>\r\n                <button onClick={setHigh}>High</button>\r\n                <button onClick={setMiddle}>Middle</button>\r\n                <button onClick={setLow}>Low</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: AffairType[] = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => {\r\n    if (filter === 'all') return affairs\r\n\r\n        // if (filter === 'low') {\r\n        //     return affairs.filter(el => el.priority === 'low')\r\n        // }\r\n        // if (filter === 'middle') {\r\n        //     return affairs.filter(el => el.priority === 'middle')\r\n        // }\r\n        // if (filter === 'high') {\r\n        //     return affairs.filter(el => el.priority === 'high')\r\n    // } else return affairs\r\n\r\n    else return affairs.filter(a => a.priority === filter)\r\n}\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => {\r\n    return affairs.filter(el => el._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (event: ChangeEvent<HTMLInputElement>) => void\r\n    addUser: () => void\r\n    error: string\r\n    totalUsers: number\r\n    onKeyDownHandler: (event: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, onKeyDownHandler, setNameCallback, addUser, error, totalUsers}\r\n) => {\r\n    const inputClass = error === '' ? s.input : s.input + ' ' + s.error\r\n\r\n\r\n    return (\r\n        <div className={s.inputWrap}>\r\n            <input value={name}\r\n                   onChange={setNameCallback}\r\n                   onKeyDown={onKeyDownHandler}\r\n                   className={inputClass}/>\r\n            <button onClick={addUser}\r\n                    disabled={!name}\r\n                    className={s.buttonAdd}>add\r\n            </button>\r\n            <span>{totalUsers}</span>\r\n            <span className={s.errorText}>{error}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[]\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\r\n    const [name, setName] = useState<string>('')\r\n    const [error, setError] = useState<string>('')\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.currentTarget.value.trim()) {\r\n            setName(e.currentTarget.value.trim())\r\n            setError('')\r\n        } else {\r\n            setName('')\r\n            setError('name is require!')\r\n        }\r\n    }\r\n    const addUser = () => {\r\n        addUserCallback(name)\r\n        setName('')\r\n        alert(`Hello, ${name}!`)\r\n    }\r\n    const onKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === 'Enter' && name) {\r\n            addUser()\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onKeyDownHandler={onKeyDownHandler}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([])\r\n\r\n    const addUserCallback = (name: string) => {\r\n        setUsers([{_id: v1(), name}, ...users])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.superInput + ' ' + s.errorInput : s.superInput} ${className}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red + ' ' + s.default : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.checkboxLabel}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './styles/reset.css'\r\nimport './index.css'\r\nimport './styles/common.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}